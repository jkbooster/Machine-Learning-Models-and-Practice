# -*- coding: utf-8 -*-
"""AllRegressionPractice.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1S09OiR5qECHcTLeWGjRlfInWhulnBrEL
"""

import numpy as np
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt

from sklearn.datasets import fetch_california_housing

data = fetch_california_housing()
df = pd.DataFrame(data.data, columns = data.feature_names)
df

print(data)

from sklearn.model_selection import train_test_split

x = df
y = data.target
x_train, x_test, y_train, y_test = train_test_split(x, y, test_size = 0.33, random_state = 42)

from sklearn.preprocessing import StandardScaler
scaler = StandardScaler()
scaler.fit(df)

from sklearn.linear_model import LinearRegression
linreg = LinearRegression().fit(x, y)
linreg.predict(x_train)

from sklearn.model_selection import cross_val_score
score1 = np.mean(cross_val_score(linreg, x, y, cv=5))
score1

from sklearn.linear_model import Ridge
ridgereg = Ridge(alpha = 2)
ridgereg.fit(x, y)
ridgereg.predict(x_train)

score2 = np.mean(cross_val_score(ridgereg, x, y, cv=5))
score2

from sklearn.linear_model import Lasso
lassoreg = Lasso(alpha = 0.1)
lassoreg.fit(x,y)
lassoreg.predict(x_train)

score3 = np.mean(cross_val_score(lassoreg, x, y, cv=5))
score3

from sklearn.neighbors import KNeighborsRegressor
scores = 0
best_n = 1
for i in range(1, 51):
  knnreg = KNeighborsRegressor(n_neighbors=i)
  knnreg.fit(x,y)
  score4 = np.mean(cross_val_score(knnreg, x, y, cv=5))
  if(score4 > scores):
    best_n = i
    scores = score4
knnreg = KNeighborsRegressor(n_neighbors=best_n)
knnreg.fit(x,y)

score4 = np.mean(cross_val_score(knnreg, x, y, cv=5))
score4











